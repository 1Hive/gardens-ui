{
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": ["standard", "standard-react", "prettier", "prettier/react", "eslint:recommended"],
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 6,
    "ecmaFeatures": {
      "jsx": true
    },
    "sourceType": "module"
  },
  "plugins": ["prettier", "react", "react-hooks", "import"],
  "rules": {
    "valid-jsdoc": "error",
    "react/prop-types": 0,
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "semi": false,
        "trailingComma": "es5",
        "bracketSpacing": true,
        "jsxBracketSameLine": false,
        "tabSize": 2
      }
    ],
    "react/jsx-fragments": 0,
    "react/jsx-key": 0,
    "react/jsx-handler-names": 0,
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "linebreak-style": ["error", "unix"]
  },
  "overrides": [
    {
    "files": [
        "**/*.ts",
        "**/*.tsx"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "@typescript-eslint"
      ],
      // If need to support jsx
      //     parserOptions: {
      //       ecmaFeatures: { jsx: true }
      //     },
      /**
     * Typescript Rules
     * https://github.com/bradzacher/eslint-plugin-typescript
     * Enable your own typescript rules.
     */
    "rules": {
        // Prevent TypeScript-specific constructs from being erroneously flagged as unused
      "@typescript-eslint/no-unused-vars"         : "error",
        // Require PascalCased class and interface names
      "@typescript-eslint/class-name-casing"      : "error",
        // Require a specific member delimiter style for interfaces and type literals
        // Default Semicolon style
      "@typescript-eslint/member-delimiter-style" : "error",
        // Require a consistent member declaration order
      "@typescript-eslint/member-ordering"        : "error",
        // Require consistent spacing around type annotations
      "@typescript-eslint/type-annotation-spacing": "error"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "rules": {
        "@typescript-eslint/no-use-before-define": 0
      }
    }
  ]
}
